---
# https://communities.ca.com/docs/DOC-231149229
- name: 'verify presence of file'
  connection: local
  sudo: no
  local_action: stat path={{cur_dir}}/{{ cara_file }}
  register: cara_cached

- name: "check ROC"
  connection: local
  sudo: no
  local_action: uri url={{ cara_baseurl }} status_code=200 timeout=100
  when: not cara_cached.stat.exists

- name: "download nolio from VM on localhost"
  local_action: get_url url={{ cara_baseurl }}/apps/{{ cara_file }} dest={{cur_dir}}/{{ cara_file }} timeout=100
  sudo: no
  register: nolio
  when: not cara_cached.stat.exists

- name: 'verify presence of nolioagent'
  stat: path=/home/vagrant/nolioagent
  register: nolioagent

- name: 'copy nolio agent software to remote'
  copy: src={{cur_dir}}/{{ cara_file }} dest=/home/vagrant/{{ cara_file }} mode=u=rwx,g=rx,o=rx
  when: not nolioagent.stat.exists

- name: 'copy nolio agent software to remote'
  template: src=agent.response.varfile.j2 dest=/home/vagrant/agent.response.varfile owner=vagrant

- name: 'install nolio agent'
  shell: /home/vagrant/{{ cara_file }}  -q -dir {{ nolioagent_dir }} -varfile agent.response.varfile \
  when: not nolioagent.stat.exists

- name: 'copy buildserverCA.crt to webserver'
  copy: src=pki/buildserverCA.cer dest=/home/vagrant/buildserverCA.cer

- name: 'inquire jre/lib/security of Java trust store'
  stat: "path=/home/vagrant/nolioagent/jre/lib/security/cacerts"
  register: java_location

- name: 'print red letters if import needed of CA root cert in Java trust store'
  command: "keytool -list -alias dev -keystore /home/vagrant/nolioagent/jre/lib/security/cacerts -storepass changeit -noprompt"
  when: java_location.stat.exists
  ignore_errors: yes
  register: javakey

- name: "import buildserverCA root cert in Java trust store"
  sudo: yes
  command: "keytool -importcert -trustcacerts -file /home/vagrant/buildserverCA.cer -storepass changeit -noprompt -alias dev -keystore /home/vagrant/nolioagent/jre/lib/security/cacerts"
  when: java_location.stat.exists and javakey.rc == 1
